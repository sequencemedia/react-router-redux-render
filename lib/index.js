"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.render=exports.renderToStaticMarkup=exports.renderToString=void 0;var _react=_interopRequireDefault(require("react"));var _server=_interopRequireDefault(require("react-dom/server"));var _reactRedux=require("react-redux");var _reactRouterDom=require("react-router-dom");var _boom=_interopRequireDefault(require("@hapi/boom"));var _debug=_interopRequireDefault(require("debug"));const log=(0,_debug.default)('@sequencemedia/react-router-redux-render');log('`react-router-redux-render` is awake');const badImplementation=(e,data)=>_boom.default.boomify(e,{statusCode:500,message:'Rendering exception',data});const notFound=data=>_boom.default.notFound('Routing exception',data);const getReactDOMServerRenderToString=(store,routerProps,routes)=>{try{return _server.default.renderToString(_react.default.createElement(_reactRedux.Provider,{store:store},_react.default.createElement(_reactRouterDom.StaticRouter,routerProps,routes)));}catch(e){log(e);throw badImplementation(e,routerProps);}};const getReactDOMServerRenderToStaticMarkup=(store,routerProps,routes)=>{try{return _server.default.renderToStaticMarkup(_react.default.createElement(_reactRedux.Provider,{store:store},_react.default.createElement(_reactRouterDom.StaticRouter,routerProps,routes)));}catch(e){log(e);throw badImplementation(e,routerProps);}};const renderToString=(store,{location,context={},...router}={},routes={})=>getReactDOMServerRenderToString(store,{...router,location,context},routes)||function(e){throw e;}(notFound({...router,location,context}));exports.renderToString=renderToString;const renderToStaticMarkup=(store,{location,context={},...router}={},routes={})=>getReactDOMServerRenderToStaticMarkup(store,{...router,location,context},routes)||function(e){throw e;}(notFound({...router,location,context}));exports.renderToStaticMarkup=renderToStaticMarkup;const render=async(store,{location,context={},...router}={},routes={})=>getReactDOMServerRenderToString(store,{...router,location,context},routes)||function(e){throw e;}(notFound({...router,location,context}));exports.render=render;